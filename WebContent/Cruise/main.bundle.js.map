{"version":3,"sources":["C:/aaagit/CruiseDirector/src/$_gendir lazy","C:/aaagit/CruiseDirector/src/app/app.component.css","C:/aaagit/CruiseDirector/src/app/app.component.html","C:/aaagit/CruiseDirector/src/app/app.component.ts","C:/aaagit/CruiseDirector/src/app/app.module.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/dataservices/plugins.service.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.css","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.html","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/pluginobject.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.css","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.html","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/application.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/credentials.ts","C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/services.ts","C:/aaagit/CruiseDirector/src/app/index.ts","C:/aaagit/CruiseDirector/src/environments/environment.ts","C:/aaagit/CruiseDirector/src/main.ts","C:/aaagit/CruiseDirector/src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<h2 class=\\\"text-muted\\\">\\n\\t\\tDashboard <small>Statistics Overview</small>\\n\\t</h2>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<img src=\\\"assets\\\\img\\\\slider1.jpg\\\">\\n\\t\\t</div>\\n\\t</div>\\n\\t<hr>\\n\\t<tabset>\\n\\t  <tab heading='Cruise-JSON'>\\n\\t     <app-plugins></app-plugins>\\n\\t  </tab>\\n\\t  <tab>\\n\\t    <ng-template tabHeading>Cruise-UI</ng-template>\\n\\t    To-Do\\n\\t  </tab>\\n\\t</tabset>\\n    \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PluginsComponent } from './cruiseComponents/core/plugins/plugins.component';\nimport { PluginsService } from './cruiseComponents/core/dataservices/plugins.service';\nimport { Ng4JsonEditorModule } from 'angular4-jsoneditor';\nimport { GlobalvariablesComponent } from './cruiseComponents/core/globalvariables/globalvariables.component';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PluginsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    Ng4JsonEditorModule,\n    TabsModule.forRoot()\n  ],\n  providers: [PluginsService, HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs/Observable\";\nimport { PluginsComponent } from '../plugins/plugins.component';\nimport { GlobalvariablesComponent } from '../globalvariables/globalvariables.component';\n@Injectable()\nexport class PluginsService {\n    PlugInData;\n    LastURL: string;\n    gv: GlobalvariablesComponent;\n    constructor(private _http: HttpClient) {\n        this.gv = new GlobalvariablesComponent();\n        this.LastURL = this.gv.GetEngineURL();\n        console.log('Constructor PluginsService:'+this.LastURL);\n    }\n    getPlugin(URL: string, params) {\n        // 'http://localhost:8079/CuiseSite/Cruiselet?TableName=testtable'\n        this.LastURL = URL;\n        console.log('FetchData PluginsService');\n        this._http.get(URL, params).subscribe(data => {\n            this.PlugInData = data;\n            console.log(JSON.stringify(data));\n            console.log(data);\n            return data;\n        });\n        \n    }\n    setCruiseEngine(inURL: string){\n        this.LastURL = inURL;\n    }\n    doGET() {\n        /*console.log(\"GET:\"+this.LastURL);\n        let url = `${this.LastURL}`;\n        return this._http.get(url).retry(3).subscribe(res => {\n            console.log(\"Hello:\"+res)\n            return res;\n        },\n        (err: HttpErrorResponse) => {\n            if (err.error instanceof Error) {\n              // A client-side or network error occurred. Handle it accordingly.\n              console.log('An error occurred:', err.error.message);\n            } else {\n              // The backend returned an unsuccessful response code.\n              // The response body may contain clues as to what went wrong,\n              console.log(`Backend returned code ${err.status}, body was: ${err.error}`);\n            }\n        });*/\n        let url = `${this.LastURL}`;\n        return new Promise(resolve => {\n            this._http.get(url).subscribe(data => {\n              resolve(data);\n            }, err => {\n              console.log(err);\n            });\n          });\n    }\n    \n    doPOST(Application) {\n        console.log(\"POST:\"+this.LastURL+\"/\"+JSON.stringify(Application));\n        let url = `${this.LastURL}`;\n        \n        let body = JSON.stringify({ Application });\n        /*let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        \n        \n        this._http.post(url, body).subscribe(res => {\n            console.log(\"Hello:\"+res)\n            return res;\n        },\n        (err: HttpErrorResponse) => {\n            if (err.error instanceof Error) {\n              // A client-side or network error occurred. Handle it accordingly.\n              console.log('An error occurred:', err.error.message);\n            } else {\n              // The backend returned an unsuccessful response code.\n              // The response body may contain clues as to what went wrong,\n              console.log(`Backend returned code ${err.status}, body was: ${err.error}`);\n            }\n        });*/\n        \n        return new Promise(resolve => {\n            this._http.post(url, body).subscribe(data => {\n              resolve(data);\n            }, err => {\n              console.log(err);\n            });\n          });\n    }\n    \n    doPUT() {\n        console.log(\"PUT\");\n    }\n    \n    doDELETE() {\n        console.log(\"DELETE\");\n    }\n    \n    doGETAsPromise() {\n        console.log(\"GET AS PROMISE\");\n    }\n    \n    doGETAsPromiseError() {\n        console.log(\"GET AS PROMISE ERROR\");\n    }\n    \n    doGETAsObservableError() {\n        console.log(\"GET AS OBSERVABLE ERROR\");\n    }\n    \n    doGETWithHeaders() {\n        console.log(\"GET WITH HEADERS\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/dataservices/plugins.service.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.css\n// module id = ../../../../../src/app/cruiseComponents/core/globalvariables/globalvariables.component.css\n// module chunks = main","module.exports = \"<p>\\n  globalvariables works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.html\n// module id = ../../../../../src/app/cruiseComponents/core/globalvariables/globalvariables.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-globalvariables',\n  templateUrl: './globalvariables.component.html',\n  styleUrls: ['./globalvariables.component.css']\n})\nexport class GlobalvariablesComponent implements OnInit {\n  private engineURL: string;\n  constructor() { \n      //this.engineURL = 'http://localhost:8079/CuiseSite/Cruiselet';\n      this.engineURL = '/Cruiselet';\n      //this.engineURL = 'http://steve-env.fijpm3ncun.us-west-2.elasticbeanstalk.com/Cruiselet';\n  }\n  \n  ngOnInit() {\n      //this.engineURL = 'http://localhost:8079/CuiseSite/Cruiselet';\n      this.engineURL = '/Cruiselet';\n      //this.engineURL = 'http://steve-env.fijpm3ncun.us-west-2.elasticbeanstalk.com/Cruiselet';\n  }\n  GetEngineURL(){\n      return this.engineURL;\n  }\n  SetEngineURL(inURL: string){\n      this.engineURL = inURL;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/globalvariables/globalvariables.component.ts","import { services } from './utils/services';\nimport { actions } from './utils/actions';\nexport class pluginObject {\n    public Actions: actions[] = [];\n    constructor(public name:string, public version: string, public vendor: string, public actions: actions[] = []){\n        //this.Actions = actions;\n        //console.log();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/pluginobject.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"    #jsoneditor {\\r\\n      width: '100%';\\r\\n      height: '100%';\\r\\n    }\\r\\n    #jsondisplay {\\r\\n      width: '100%';\\r\\n      height: '100%';\\r\\n    }\\r\\n    body, html {\\r\\n      font-family: \\\"DejaVu Sans\\\", sans-serif;\\r\\n    }\\r\\n\\r\\n    p, li {\\r\\n      width: 100%;\\r\\n      font-size: 10.5pt;\\r\\n    }\\r\\n\\r\\n    code {\\r\\n      background: #f5f5f5;\\r\\n    }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.css\n// module id = ../../../../../src/app/cruiseComponents/core/plugins/plugins.component.css\n// module chunks = main","module.exports = \"<!-- button class=\\\"btn btn-outline-secondary\\\"  [ngbTooltip]=\\\"tipContent\\\">Show</button -->\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-xl-3 col-lg-6\\\">\\n\\t\\t\\t<div class=\\\"card card-primary card-inverse\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header card-primary\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-comments fa-5x\\\"></i>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-9 text-xs-right\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"huge\\\">{{supportedPlugin.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"huge\\\">Supported Plugins</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"selectedPlugin\\\" (ngModelChange)=\\\"onPluginChange($event)\\\">\\n\\t\\t\\t\\t\\t  <option *ngFor=\\\"let sp of supportedPlugin\\\" title=\\\" By:{{sp.vendor}} Version:{{sp.version}}\\\" [ngValue]=\\\"sp\\\">{{sp.name}} </option>\\n\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xl-3 col-lg-6\\\">\\n\\t\\t\\t<div class=\\\"card card-success card-inverse\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header card-success\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-tasks fa-5x\\\"></i>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-9 text-xs-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"huge\\\">{{supportedActions.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div>Supported Actions</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div >\\n\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"selectedAction\\\" (ngModelChange)=\\\"onActionChange($event)\\\">\\n\\t\\t\\t\\t\\t  <option *ngFor=\\\"let sa of supportedActions\\\" title=\\\"{{sa.actionDesc}}\\\" [ngValue]=\\\"sa\\\">{{sa.actionName}}</option>\\n\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xl-3 col-lg-6\\\">\\n\\t\\t\\t<div class=\\\"card card-warning card-inverse\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header card-warning\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-shopping-cart fa-5x\\\"></i>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-9 text-xs-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"huge\\\">{{supportedActionParams.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t<div>New Orders!</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div >\\n\\t\\t\\t\\t\\t<select [(ngModel)]=\\\"selectedActionParams\\\" (ngModelChange)=\\\"onActionParamChange($event)\\\">\\n\\t\\t\\t\\t\\t  <option *ngFor=\\\"let sap of supportedActionParams\\\" title=\\\"{{sap.paramDesc}}\\\" [ngValue]=\\\"sap\\\">{{sap.paramName}}</option>\\n\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t    <input type=\\\"url\\\" class=\\\"form-control\\\" id=\\\"myURL\\\" (blur)=\\\"doUpdateURL($event)\\\" aria-describedby=\\\"urlHelp\\\" placeholder=\\\"http://localhost:4200\\\">\\n\\t    <!-- button class=\\\"btn btn-primary btn-sm active\\\"  (click)=\\\"doConnect()\\\" title=\\\"Connect to Cruise Engine.\\\">Clear</button -->\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-lg-5\\\">\\n\\t\\t\\t<div class=\\\"card card-default\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-clock-o fa-fw\\\"></i>Editor:\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm active\\\"  (click)=\\\"doClear()\\\" title=\\\"Clears the Editor Content\\\">Clear</button>\\n\\t\\t\\t\\t    <button class=\\\"btn btn-primary btn-sm active\\\" (click)=\\\"doStage()\\\" title=\\\"Moves the selected Plugin and Action to the editor\\\">Stage</button>\\n\\t\\t\\t\\t  \\t<button class=\\\"btn btn-primary btn-sm active\\\" (click)=\\\"doPOST()\\\" title=\\\"Sends the editor content to the Cruise Engine\\\">Send</button>\\n\\t\\t\\t\\t  \\t<button class=\\\"btn btn-primary btn-sm active\\\" (click)=\\\"doShow()\\\" title=\\\"Shows the raw JSON from the editor in the Response area.\\\">Show</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div id=\\\"jsoneditor\\\">\\n\\t\\t\\t\\t\\t\\t<json-editor [options]=\\\"editorOptions\\\" [data]=\\\"Application\\\"></json-editor>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-lg-5\\\">\\n\\t\\t\\t<div class=\\\"card card-default\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-bell fa-fw\\\"></i> Response\\n\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary btn-sm active\\\" (click)=\\\"doClearOutput()\\\">Clear</button>\\n\\t\\t\\t\\t    <button class=\\\"btn btn-primary btn-sm active\\\" (click)=\\\"doConvert()\\\">Edit</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"m-t-1\\\">\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- /.card-header -->\\n\\t\\t\\t\\t<div id=\\\"jsondisplay\\\">\\n\\t\\t\\t\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t    <textarea class=\\\"form-control\\\" id=\\\"exampleTextarea\\\" rows=\\\"25\\\">{{jsonData}}</textarea>\\n\\t\\t\\t\\t\\t  </div>\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- /.card-body -->\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- /.card -->\\n\\n\\t\\t\\t<!-- /.card .chat-card -->\\n\\t\\t</div>\\n\\t</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.html\n// module id = ../../../../../src/app/cruiseComponents/core/plugins/plugins.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, CUSTOM_ELEMENTS_SCHEMA, HostBinding} from '@angular/core';\nimport { PluginsService } from '../dataservices/plugins.service';\nimport { HttpParams } from '@angular/common/http';\nimport { JsonEditorComponent, JsonEditorOptions } from 'angular4-jsoneditor/jsoneditor/jsoneditor.component';\nimport { GlobalvariablesComponent } from '../globalvariables/globalvariables.component';\nimport { actions } from './utils/actions';\nimport { actionParams } from './utils/actionparams';\nimport { pluginObject } from './pluginobject';\nimport { application } from './utils/application';\nimport { services } from './utils/services';\n@Component({\n  selector: 'app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.css']\n})\n\nexport class PluginsComponent implements OnInit {\n  private plugin;\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n  public jsonData: string;\n  private gv = new GlobalvariablesComponent();\n  public supportedPlugin: pluginObject[] = [];\n  public supportedActions: actions[] = [];\n  public supportedActionParams: actionParams[] = [];\n  public selectedPlugin: pluginObject;\n  public selectedAction: actions;\n  public selectedActionParams: actionParams;\n  private postApp: application = null;\n  private activeURL: string = undefined;\n  //@HostBinding('attr.id') id;\n  @ViewChild(JsonEditorComponent) editor: JsonEditorComponent;\n  \n  private Application = {};\n  private initSend = {\n              \"parameters\" : {\n                \"name\" : \"sampleapp\",\n                \"id\" : \"sampleid\"\n              },\n              \"credentials\" : {\n                \"parameters\" : {\n                  \"password\" : \"admin\",\n                  \"username\" : \"admin\"\n                }\n              },\n              \"services\" : [\n                    {\"parameters\" : {\n                        \"pluginName\" : \"CruiseCorePlugin\",\n                        \"service\":\"SomeService\",\n                        \"action\" : \"info\"\n                     }\n                    }\n                ]\n              };\nprivate customSend = {\n        \"parameters\" : {\n            \"name\" : \"sampleapp\",\n            \"id\" : \"sampleid\"\n          },\n          \"credentials\" : {\n            \"parameters\" : {\n              \"password\" : \"admin\",\n              \"username\" : \"admin\"\n            }\n          },\n          \"services\" : [\n                {\"parameters\" : {\n                    \"pluginName\" : \"CruiseCorePlugin\",\n                    \"service\":\"SomeService\",\n                    \"action\" : \"info\"\n                 }\n                }\n            ]\n          };\n\n  constructor(private _httpPlugin: PluginsService) {\n      this.Application = this.initSend;\n      this.editorOptions = new JsonEditorOptions()\n      this.editorOptions.modes = ['code', 'form', 'text', 'tree', 'view']; // set all allowed modes\n      this.data = this.Application;\n \n    \n  }\n\n  ngOnInit() {\n      this.data = this._httpPlugin.doPOST(this.Application).then(data => {\n          this.data = data;\n          for(let i=0;i<this.data.Plugins.length;i++){\n              //console.log('XXXX:'+this.data.Plugins[i].plugInMetaData.name);\n              let el = this.data.Plugins[i].plugInMetaData;\n              this.supportedPlugin.push(new pluginObject(el.name, el.version, el.vendor, el.actions));\n              \n          }\n          this.jsonData = (JSON.stringify(this.supportedPlugin, null, 4));\n        });\n  }\n  onNameKeyUp(event: any) {\n      console.log(event.target.value);\n  }\n  doPOST() {\n        \n        this.data = this._httpPlugin.doPOST(this.editor.get()).then(data => {\n            this.data = data;\n            this.jsonData = (JSON.stringify(this.data, null, 4));\n        });\n      //}\n    }\n  private createApp(){\n      //var app: application;\n      if(null === this.postApp){\n          this.postApp = new application(\"test\",\"test\");\n      }\n      var ser = new services(this.selectedPlugin.name)//\n      ser.addParam(\"action\", this.selectedAction.actionName);\n      for(let i=0;i<this.selectedAction.actionParams.length;i++){\n         if(this.selectedAction.actionParams[i].paramName !='ID'){\n            ser.addParam(this.selectedAction.actionParams[i].paramName, this.selectedAction.actionParams[i].paramDefault);\n         }\n      }\n      this.postApp.addService(ser);\n      let js = JSON.stringify(this.postApp, null, 4);\n      this.editor.set(JSON.parse(js));\n  }\n  doStage(){\n      this.createApp();\n  }\n  doClear(){\n      this.postApp = null;\n      this.editor.set(JSON.parse(\"{}\"));\n  }\n  doClearOutput(){\n      this.jsonData  = \"{}\";\n  }\n  doConvert(){\n      this.editor.set(JSON.parse(this.jsonData));\n  }\n  doShow(){\n      this.postApp = null;\n      this.jsonData  = JSON.stringify(this.editor.get(),null,4);\n  }\n  onActionChange(action: actions){\n      \n      this.selectedAction = action\n      this.supportedActionParams = action.actionParams;\n      this.jsonData = (JSON.stringify(this.selectedAction, null, 4));\n  }\n  onActionParamChange(actionParams: actionParams){\n      this.selectedActionParams = actionParams;\n  }\n  onPluginChange(plugin: pluginObject){\n      this.selectedPlugin = plugin;\n      this.jsonData = (JSON.stringify(this.selectedPlugin, null, 4));\n      this.supportedActions = plugin.actions;\n  }\n  doUpdateURL(event: any) { // without type info\n      this.activeURL = event.target.value;\n  }\n  doConnect(){\n      if(undefined != this.activeURL){\n      this._httpPlugin.LastURL = this.activeURL;\n      }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/plugins.component.ts","import { parameter } from './parameter';\nimport { credentials } from './credentials';\nimport { services } from './services';\nexport class application {\n    public parameters = {};\n    public services: services[] = [];\n    public credentials: credentials = new credentials(\"admin\", \"admin\");\n    constructor(appName: string, id: string){\n        this.parameters['name'] = appName;\n        this.parameters['id'] = id;\n    }\n    addParam(name: string, value: string){\n        this.parameters[name] = value;\n    }\n    getParam(name: string){\n\n    }\n    addCredential(cred: credentials){\n        this.credentials = cred;\n    }\n    addService(serv: services){\n        this.services.push(serv);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/application.ts","import { parameter } from './parameter';\n\nexport class credentials {\n    public parameters = {};\n    constructor(username: string, password: string){\n        this.parameters[\"username\"]= username;\n        this.parameters[\"password\"] = password;\n    }\n    addParam(name: string, value: string){\n        this.parameters[name] = value;\n    }\n    getParam(name: string){\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/credentials.ts","import { parameter } from './parameter';\n\nexport class services {\n    public parameters = {};\n    constructor(value: string){\n        this.parameters[\"pluginName\"] = value;\n    }\n    addParam(name: string, value: string){\n        this.parameters[name] = value;\n    }\n    getParam(name: string){\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/cruiseComponents/core/plugins/utils/services.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/app/index.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  defaultEngine: 'http://localhost:8079/CuiseSite/Cruiselet'\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/environments/environment.ts","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/main.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// C:/aaagit/CruiseDirector/src/polyfills.ts"],"sourceRoot":"webpack:///"}